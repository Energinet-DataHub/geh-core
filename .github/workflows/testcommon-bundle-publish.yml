# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Publish TestCommon bundle

on:
  # Build, test, pack and publish release packages
  # Only executed if (*.)TestCommon packages content or build scripts has changed; not if solution file, documentation or tests has changed
  push:
    branches:
      - main
    paths:
      - source/TestCommon/source/FunctionApp.TestCommon/**
      - source/TestCommon/source/TestCommon/**
      - .github/workflows/testcommon-bundle-publish.yml
  # Build, test, pack
  # Executed if TestCommon folder or build scripts has changed; including if documentation or tests has changed
  pull_request:
    branches:
      - main
    paths:
      - source/TestCommon/**
      - .github/workflows/testcommon-bundle-publish.yml
  # Build, test, pack and publish prerelease packages
  # Executed if manually triggered
  workflow_dispatch: {}

env:
  SOLUTION_FILE_PATH: source/TestCommon/TestCommon.sln
  BUILD_CONFIGURATION: Release
  # Conditions
  PUSH_PACKAGES: ${{ github.event_name != 'pull_request' }}
  # Tool versions
  DOTNET_VERSION: '5.0.202'
  AZURITE_VERSION: '3.14.0'
  AZURE_FUNCTIONS_CORE_TOOLS_VERSION: '3.0.3568'
  # Variables necessary to manage Azure resources for tests (similar to local use of 'integrationtest.local.settings.json')
  AZURE_KEYVAULT_URL: ${{ secrets.AZURE_KEYVAULT_URL }}

jobs:
  build_and_publish:
    runs-on: windows-latest
    name: Publish bundle to NuGet.org

    permissions:
      contents: read

    environment: CI

    steps:
      - name: Checkout repository (main branch)
        if: ${{ github.ref_name == 'main' }}
        uses: actions/checkout@master
        with:
          fetch-depth: 2 # To retrieve the preceding commit on 'main'

      - name: Checkout repository (feature branch)
        if: ${{ github.ref_name != 'main' }}
        uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v17.2

      - name: List all changed files
        shell: bash
        run: |
          echo "Changes:"
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo " - $file"
          done

      - name: Package content or build has changed
        id: changed-content
        uses: tj-actions/changed-files@v17.2
        with:
          files: |
            **/source/TestCommon/source/FunctionApp.TestCommon/*.*
            **/source/TestCommon/source/TestCommon/*.*
            .github/workflows/testcommon-bundle-publish.yml

      - name: Run step if any of the listed files above change
        if: steps.changed-content.outputs.any_changed == 'true'
        run: |
          echo "One or more files listed above has changed."

      - name: Run step if none of the listed files above change
        if: steps.changed-content.outputs.any_changed == 'false'
        run: |
          echo "None of the files listed above has changed."

      # - name: Setup .NET ${{ env.DOTNET_VERSION }} environment
      #   uses: actions/setup-dotnet@v1
      #   with:
      #     dotnet-version: ${{ env.DOTNET_VERSION }}

      # - name: Install Azurite v${{ env.AZURITE_VERSION }}
      #   run: npm install -g azurite@${{ env.AZURITE_VERSION }}

      # - name: Install Azure Functions Core Tools v${{ env.AZURE_FUNCTIONS_CORE_TOOLS_VERSION }}
      #   run: npm install -g azure-functions-core-tools@${{ env.AZURE_FUNCTIONS_CORE_TOOLS_VERSION }}

      # - name: Cache NuGet packages
      #   uses: actions/cache@v2
      #   id: cache-nuget
      #   with:
      #     path: ~/.nuget/packages
      #     key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }} #hash of project files
      #     restore-keys: |
      #       ${{ runner.os }}-nuget-

      # - name: Restore NuGet packages
      #   run: dotnet restore ${{ env.SOLUTION_FILE_PATH }}

      # - name: Build solution
      #   run: dotnet build ${{ env.SOLUTION_FILE_PATH }} --no-restore --configuration ${{ env.BUILD_CONFIGURATION }}

      # - name: Run tests
      #   run: |
      #     az login --service-principal --username "${{ secrets.AZURE_SPN_ID }}" --password "${{ secrets.AZURE_SPN_SECRET }}" --tenant "${{ secrets.AZURE_TENANT_ID }}"
      #     az account set --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      #     dotnet test ${{ env.SOLUTION_FILE_PATH }} --no-build --configuration ${{ env.BUILD_CONFIGURATION }} --verbosity normal

      # - name: Get version suffix property value
      #   uses: ./.github/actions/get-version-suffix
      #   id: get_version_suffix

      # - name: Pack TestCommon project
      #   run: dotnet pack ${{ env.PROJECT_PATH }} --configuration ${{ env.BUILD_CONFIGURATION }} --include-symbols -p:SymbolPackageFormat=snupkg -p:RepositoryCommit=${{ github.sha }} ${{ steps.get_version_suffix.outputs.version_suffix_property }}
      #   env:
      #     PROJECT_PATH: 'source/TestCommon/source/TestCommon/TestCommon.csproj'

      # - name: Pack FunctionApp.TestCommon project
      #   run: dotnet pack ${{ env.PROJECT_PATH }} --configuration ${{ env.BUILD_CONFIGURATION }} --include-symbols -p:SymbolPackageFormat=snupkg -p:RepositoryCommit=${{ github.sha }} ${{ steps.get_version_suffix.outputs.version_suffix_property }}
      #   env:
      #     PROJECT_PATH: 'source/TestCommon/source/FunctionApp.TestCommon/FunctionApp.TestCommon.csproj'

      # - name: Check each NuGet package version does not exists (not looking at prereleases)
      #   if: ${{ env.PUSH_PACKAGES == 'true' }}
      #   uses: ./.github/actions/nuget-assert-release-version
      #   with:
      #     NUPKG_RECURSE_PATH: 'source/TestCommon/source'

      # - name: Push to NuGet.org
      #   if: ${{ env.PUSH_PACKAGES == 'true' }}
      #   run: dotnet nuget push ${{ env.NUPKG_FILTER_PATTERN }} --api-key ${{ secrets.NUGET_TOKEN }} --source ${{ env.NUGET_FEED_PATH }}
      #   env:
      #     NUPKG_FILTER_PATTERN: 'source/TestCommon/source/**/*.nupkg'
      #     NUGET_FEED_PATH: 'https://api.nuget.org/v3/index.json'
